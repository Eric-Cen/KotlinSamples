apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.mcarving.roomwordsample"
        minSdkVersion 26
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    def roomVersion = "1.1.1"
    def archLifecycleVersion = "1.1.1"
    def coroutines = "0.26.1"
    def constraintLayoutVersion = "1.1.3"
    def supportLibVersion = "28.0.0"

    def junitVersion = "4.12"
    def runnerVersion = "1.0.2"
    def espressoVersion = "3.0.2"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibVersion"

    // Room components
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    kapt "android.arch.persistence.room:compiler:$roomVersion"
    androidTestImplementation "android.arch.persistence.room:testing:$roomVersion"

    // Lifecycle components
    implementation "android.arch.lifecycle:extensions:$archLifecycleVersion"
    kapt "android.arch.lifecycle:compiler:$archLifecycleVersion"

    // Coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "com.android.support.test:runner:$runnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"


}

kotlin {
    experimental {
        coroutines "enable"
    }
}
